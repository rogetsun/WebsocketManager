本项目依赖EventTimer.jar

项目配置:
    1.在web.xml中增加listener,用户web容器启动时,扫描用户编写的WSServer实现,并添加进ServerContainer.项目中listener默认实现:com.uv.websocket.WSListener
    2.要在用户实现WSServer的类中getHttpSession()获得当前httpSession,需要配置filter.默认实现:com.uv.websocket.WSFilter
    3.要通过servlet给入数据,在web容器内部触发通过websocket发送给客户端,需要配置默认实现:WSTrigger到servlet
        servlet接受参数:dataType, data.
        dataType为要触发的事件名称,data为数据.所以要求data为json格式.


websocket使用方法:

    1.新建类MyWebsocket继承WSServer
    2.增加类注解@WSServerEndpoint(url)
    3.新建类MyWebsocket内部编写任意名称方法JSONObject myMethod(JSONObject j),但入参为一个JSONObject,返回一个可以toString()的对象
    4.给方法myMethod添加注解@ReceiveMsgType(EventName),注解的值本质上是要启动事件监听处理器的事件名称
    5.项目内部实现事件处理器EventHandlerS,启动事件监听EventName

常用:
    部署本项目到支持Websocket的容器,打开页面可以查看.
    test.websocket.source4, test.websocket.source5为测试实现





